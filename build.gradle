import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.jetbrains.kotlin.jvm' version '1.8.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.8.22'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.8.22'
}


apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
def mapstructVersion = '1.5.5.Final'
def mockkVersion = '1.13.7'
def testContainerVersion = '1.19.0'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-logging:3.1.4'
	runtimeOnly 'org.postgresql:postgresql'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	kapt "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "io.mockk:mockk:${mockkVersion}"
	testImplementation "org.testcontainers:testcontainers:${testContainerVersion}"
	testImplementation "org.testcontainers:junit-jupiter:${testContainerVersion}"
	testImplementation "org.testcontainers:postgresql:${testContainerVersion}"
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += "-Xjsr305=strict"
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
